#Build Directory
BD      =  W:/pinokernel

#Target
#TARGET_WIDE   = h8300-hms
TARGET_WIDE   = STM32F4XX
TARGET_DETAIL = STM32F401

#Kernel
# KERNEL  = pinok
#KERNEL  = tkernel
KERNEL  = nonkernel

#Compiler
# CC      = h8300-elf-gcc
# C++     = h8300-elf-g++
# AS      = h8300-elf-as
# LD      = h8300-elf-ld
# OBJCOPY = h8300-elf-objcopy
# OBJDUMP = h8300-elf-objdump
# STRIP   = h8300-elf-strip
CC      = arm-none-eabi-gcc
C++     = arm-none-eabi-g++
AS      = arm-none-eabi-as
LD      = arm-none-eabi-ld
OBJCOPY = arm-none-eabi-objcopy
OBJDUMP = arm-none-eabi-objdump
STRIP   = arm-none-eabi-strip

#Compile Option
# CFLAGS  = -nostdinc -nostdlib -fno-builtin -O0 -Wall -I $(BD)/include -I $(BD)/include/lib/libc -I $(BD)/config/$(TARGET_DETAIL)
CFLAGS  = -mtune=cortex-m4 -mthumb -mthumb-interwork -mfpu=vfp -msoft-float -nostdinc -nostdlib -fno-builtin -O0 -Wall -I $(BD)/include -I $(BD)/include/lib/libc -I $(BD)/config/$(TARGET_DETAIL)
#CFLAGS  = -mh -nostdinc -nostdlib -fno-builtin -O0 -Wall -I $(BD)/include
#※-mh オプションが有効だと LDコマンドの リロケイタブル作成時にエラーが発生する
#※アセンブラファイルを -mh 結果(32bit拡張)で作成しているため現状LDが通らない
LDFLAGS = -T $(BD)/config/$(TARGET_DETAIL)/general.ls -Map=$(KERNEL).map
# LDFLAGS = -l$(BD)/config/$(TARGET_DETAIL)/arm_cortexM4b_math.lib -T $(BD)/config/$(TARGET_DETAIL)/general.ls -Map=$(KERNEL).map

#Suffix Rule
.SUFFIXES:
.SUFFIXES: .o .c .s .S

OBJC = $(SRC:%.c=%.o)
OBJS = $(SRC:%.S=%.o)
OBJ  = $(OBJC) $(OBJS)

.c.o : $<
	$(CC) -c $< $(CFLAGS)

.s.o : $<
	$(CC) -c $< $(CFLAGS)

.S.o : $<
	$(CC) -c $< $(CFLAGS)

.c.s : $<
	$(CC) -S $< $(CFLAGS)

clean :
	#find . -name "*.o" -print
	# DEL /F /S *.o *.a
	# Cleanup!!
