#include "../../common/typedef.h"
#include "../../common/global.h"
#include "protectmode.h"
#include "lowCall32.h"

void test();
//void init_pic();

//vo io_sd32(SD* _sd, ui base, ui limit, u1 a, u1 type, u1 s, u1 dpl, u1 p, u1 avl, u1 db, u1 g);
//vo io_write32(si xsize, si ysize, si xSrc, si ySrc, s1 color);
//vo io_hlt32();
//vo io_fin32();
//void io_out8(int port, int data);


//	簡易カーネル
void main32()
{
//	__asm__("hlt");

	int i;

//	while(1);

	// データセグメントの反映
	__asm__(
			"movw	$0x10,		%ax		\n\t"
			"movw	%ax,		%ds		\n\t"
	);

	// プロテクトモードでVGA出力
	*(u1*)0xb8004 = 'C';
	*(u1*)0xb8005 = 0x04;

	// ジャンプ先にHLTLOOPを設定
	*(u1*)0x9500 = (u1)0xf4;
	*(u2*)0x9501 = (u2)0xfdeb;

//	__asm__("hlt");




	// IDTをひとつ設置 (0x21) (testを設置)
	struct GATE_DIS *gd = (struct GATE_DIS*)(0x8500);
//	gd->offset_low	= (int)test & 0xffff;			// 下位2byte
//	gd->selecta		= 0x18;							// 3セグメント目
//	gd->reserve		= 0;
//	gd->type			= 0x0e;							// 32bit割り込みゲート
//	gd->s				= 0;								// システムディスクリプタ
//	gd->dpl			= 0;								// 特権レベル（最高）
//	gd->p				= 1;								// セグメントはメモリ上に存在する
//	gd->offset_high	= ((int)test >> 16) & 0xffff;	// 上位2byte

//	*(u8*)0x8500 = (u8)0x00009e0000189500;

	for(i = 0; i < 64; i++)
	{
		gd[i].offset_low	= (u4)test & 0xFFFF;			// 下位2byte
		gd[i].selecta		= 0x08;							// 3セグメント目
		gd[i].reserve		= 0;
		gd[i].type			= 0x0e;							// 32bit割り込みゲート
		gd[i].s			= 0;								// セグメントディスクリプタ
		gd[i].dpl			= 0;								// 特権レベル（最高）
		gd[i].p			= 1;								// セグメントはメモリ上に存在する
		gd[i].offset_high	= ((u4)test >> 16) & 0xFFFF;			// 上位2byte
	}

//	__asm__("hlt");

	// PICの初期化
	init_pic();


	// 関数呼び出しテスト
//	test();


	// hlt roop
//	io_hlt32();

//	io_hlt32();
}

void test()
{
	*(u1*)0xb8006 = 'D';
	*(u1*)0xb8007 = 0x04;

	while(1);
}



